version: '3.4'

services:
  webapplication1:
    image: ${DOCKER_REGISTRY-}webapplication1
    build:
      context: .
      dockerfile: WebApplication1/Dockerfile
    ports:
        - "8031:80"
    depends_on:
        loki:
            condition: service_healthy
    networks:
     - network1
  seq:
    image: datalust/seq
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    restart: always
    volumes:
      - ./seq-data:/data
    depends_on:
      - webapplication1
    networks:
      - network1
  loki:
    container_name: loki
    image: grafana/loki:master
    ports:
       - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3100/ready 
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
    networks:
      - network1
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - webapplication1
    networks:
      - network1
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pwd123
    depends_on:
      #- prometheus
        loki:
            condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - network1

networks:
  network1:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
